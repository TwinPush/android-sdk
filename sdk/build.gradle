apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def libraryVersion = '3.6.3'
def libraryVersionCode = 30603
def libraryGroupId = 'com.github.twinpush'
def libraryArtifactId = 'android-sdk'

// Maven group and version
version = libraryVersion
group = libraryGroupId

android {
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 35
        compileSdk 35
        buildConfigField 'int', 'VERSION_CODE', "${libraryVersionCode}"
        buildConfigField 'String', 'VERSION_NAME', "\"${libraryVersion}\""
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig = true
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
    namespace 'com.twincoders.twinpush.sdk'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'

    api 'com.google.firebase:firebase-messaging:24.1.0'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'com.android.volley:volley:1.2.1'
    // Encrypted shared preferences
    api 'com.scottyab:secure-preferences-lib:0.1.7'
    // AppCompat is required for permissions check
    implementation 'androidx.appcompat:appcompat:1.7.0'
    // Huawei HMS
    implementation 'com.huawei.agconnect:agconnect-core:1.6.2.300'
    implementation 'com.huawei.hms:push:6.3.0.304'
}


publishing {
    publications {
        // Creates a Maven publication called "release".
        release(MavenPublication) {
            // You can then customize attributes of the publication as shown below.
            groupId = libraryGroupId
            artifactId = libraryArtifactId
            version = libraryVersion
            pom.packaging = "aar"
            // Applies the component for the release build variant.
            afterEvaluate {
                from components.release
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}