import java.text.SimpleDateFormat

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def libraryVersion = '3.0.0'
def libraryVersionCode = 3000

// Maven group and version
version = libraryVersion
def siteUrl = 'https://github.com/TwinPush/android-sdk'      // Homepage URL of the library
def gitUrl = 'https://github.com/TwinPush/android-sdk.git'   // Git repository URL
group = "com.twinpush.android"                               // Maven Group ID for the artifact

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionName libraryVersion
        versionCode libraryVersionCode
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile 'com.google.firebase:firebase-messaging:20.0.0'
    compile 'androidx.legacy:legacy-support-v4:1.0.0'
    compile 'com.android.volley:volley:1.1.1'
    // Encrypted shared preferences
    compile 'com.scottyab:secure-preferences-lib:0.1.4'
}


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
            }
        }
    }
}

dependencies {
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    //options.encoding = 'UTF-8'
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = "twinpush"
        repo = "sdk"
        name = "android-sdk"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true

        version {
            name = libraryVersion
            desc = 'TwinPush SDK for Android ' + libraryVersion
            released = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZ").format(new java.util.Date())
            vcsTag = 'v' + libraryVersion
        }
    }
}